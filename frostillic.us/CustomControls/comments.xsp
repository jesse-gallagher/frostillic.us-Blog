<?xml version="1.0" encoding="UTF-8"?>
<xp:view xmlns:xp="http://www.ibm.com/xsp/core"
	xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex">
	<xp:this.data>
		<xp:dominoView var="commentsView" ignoreRequestParams="true" viewName="Comments" categoryFilter="${compositeData.postId}"
			databaseName="#{config.databaseName}"/>
	</xp:this.data>
	
	<xp:this.resources>
		<xp:dojoModule name="dojo.cookie"/>
	</xp:this.resources>

	<xp:repeat styleClass="comments"
		rendered="#{commentsView.allEntries.count &gt; 0}" var="commentEntry"
		value="#{commentsView}">
		<xp:panel styleClass="comment log">
			<xp:this.data>
				<xp:dominoDocument var="comment"
					ignoreRequestParams="true" action="openDocument"
					documentId="#{javascript:commentEntry.getUniversalID()}" />
			</xp:this.data>

			<h3>
				<span class="username">
					<xp:text value="#{commentEntry.AuthorName}" />
				</span>
				&#160;-&#160;
				<xc:dateTime value="#{commentEntry.Posted}" />
			</h3>
			<div class="logtext">
				<xp:text value="#{comment.Body}"
					escape="false" />
			</div>
		</xp:panel>
	</xp:repeat>

	<xp:panel id="newCommentPanel">
		<xp:this.dataContexts>
			<xp:dataContext var="newCommentData" value="${ruby: Java::java.util.HashMap.new}"/>
		</xp:this.dataContexts>
	
		<table class="lotusVertTable newComment">
			<tr>
				<th scope="row"><xp:label for="newCommentName" value="Name: "/></th>
				<td>
					<xp:inputText id="newCommentName" required="true" value="#{newCommentData.name}" defaultValue="${ruby:cookie[:AuthorName] ? java.net.URLDecoder.decode(cookie[:AuthorName].value.to_s, 'UTF-8') : ''}">
						<xp:this.validators>
							<xp:validateRequired message="Name is required"/>
						</xp:this.validators>
					</xp:inputText>
				</td>
			</tr>
			<tr>
				<th scope="row"><xp:label for="newCommentEmail" value="Email: "/></th>
				<td>
					<xp:inputText id="newCommentEmail" value="#{newCommentData.email}" defaultValue="${ruby:cookie[:AuthorEmail] ? java.net.URLDecoder.decode(cookie[:AuthorEmail].value.to_s, 'UTF-8') : ''}"/>
				</td>
			</tr>
			<tr>
				<th scope="row"><xp:label for="newCommentURL" value="URL: "/></th>
				<td><xp:inputText id="newCommentURL" value="#{newCommentData.url}" defaultValue="${ruby:cookie[:AuthorURL] ? java.net.URLDecoder.decode(cookie[:AuthorURL].value.to_s, 'UTF-8') : ''}"/></td>
			</tr>
			<tr>
				<th scope="row"></th>
				<td>
					<xp:checkBox id="newCommentRememberMe" text="Remember my information on this computer" value="#{newCommentData.rememberMe}" checkedValue="yes"
						defaultChecked="${cookie.AuthorName != null}"/>
				</td>
			</tr>
			<tr>
				<th scope="row"><xp:label for="newCommentBody" value="Body: "/></th>
				<td>
					<xp:inputRichText id="newCommentBody" htmlFilterIn="acf" value="#{newCommentData.body}"/></td>
			</tr>
			<tr>
				<th scope="row"></th>
				<td>
					<xp:button id="submitComment" value="Submit Comment">
						<xp:eventHandler event="onclick" submit="true" refreshMode="complete">
							<xp:this.script><![CDATA[
								if(dojo.byId("#{id:newCommentRememberMe}").checked) {
									dojo.cookie("AuthorName", dojo.byId("#{id:newCommentName}").value, { expires: 60 })
									dojo.cookie("AuthorEmail", dojo.byId("#{id:newCommentEmail}").value, { expires: 60 })
									dojo.cookie("AuthorURL", dojo.byId("#{id:newCommentURL}").value, { expires: 60 })
								}
							]]></xp:this.script>
							<xp:this.action><![CDATA[#{ruby:
								request = facesContext.external_context.request
								remote_addr = request.remote_addr
								user_agent = request.get_header("User-Agent")
								referrer = request.get_header("Referer")
								
								# Set up the askismet requester
								config = database.get_view("Configuration")
								akismet_config = config.get_document_by_key("Akismet")
								#akismet = Java::frostillicus::Akismet.new
								akismet.api_key = akismet_config.get_item_value_string("AkismetAPIKey")
								akismet.blog = akismet_config.get_item_value_string("AkismetBlog")
								
								spam = (akismet.check_comment(remote_addr, user_agent, referrer, "", "comment", newCommentData["name"].to_s, newCommentData["email"].to_s, newCommentData["url"].to_s, newCommentData["body"].to_s) ? 1 : 0)
								
								doc = database.create_document
								doc[:Form] = "Comment"
								doc[:PostID] = post[:PostID]
								doc[:AkismetSpam] = spam
								
								doc[:Remote_Addr] = remote_addr
								doc[:HTTP_User_Agent] = user_agent
								doc[:HTTP_Referer] = referrer
								doc[:AuthorName] = newCommentData["name"].to_s
								doc[:AuthorEmailAddress] = newCommentData["email"].to_s
								doc[:AuthorURL] = newCommentData["url"].to_s
								doc[:Body] = newCommentData["body"].to_s
								doc.compute_with_form false, false
								doc.save
								
								if spam == 0
									applicationDispatcher.dispatch "comment posted", doc.universal_id
									#notify = database.create_document
									#notify[:Form] = "Comment Notification"
									#notify[:PostID] = post[:PostID]
									#notify[:CommentID] = doc[:CommentID]
									#notify[:AuthorName] = newCommentData["name"].to_s
									#notify[:AuthorEmailAddress] = newCommentData["email"].to_s
									#notify[:AuthorURL] = newCommentData["url"].to_s
									#notify["$$CreatedBy"] = session.user_name
									#notify.save
								end
								
								#if newCommentData["rememberMe"] == "yes"
									#response = facesContext.external_context.response
									
									#name_cookie = Java::javax.servlet.http.Cookie.new("AuthorName", newCommentData["name"].to_s)
									#name_cookie.max_age = 60 * 60 * 24 * 60
									#response.add_cookie name_cookie.to_java(javax.servlet.http.Cookie)
									
									#email_cookie = Java::javax.servlet.http.Cookie.new("AuthorEmailAddress", newCommentData["email"].to_s).to_java(Java::javax.servlet.http.Cookie)
									#email_cookie.max_age = 60 * 60 * 24 * 60
									#response.add_cookie email_cookie
									
									#url_cookie = Java::javax.servlet.http.Cookie.new("AuthorURL", newCommentData["url"].to_s).to_java(Java::javax.servlet.http.Cookie)
									#url_cookie.max_age = 60 * 60 * 24 * 60
									#response.add_cookie url_cookie
								#end
								
								newCommentData.clear
								
								facesContext.external_context.redirect facesContext.externalContext.requestContextPath + "/posts/" + post.get_item_value_string("PostID")
							}]]></xp:this.action>
						</xp:eventHandler>
					</xp:button>
				</td>
			</tr>
		</table>
	</xp:panel>
</xp:view>
